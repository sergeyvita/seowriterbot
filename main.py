from flask import Flask, request, jsonify
from openai import OpenAI
import os
import re

app = Flask(__name__)

api_key = os.environ.get("OPENAI_API_KEY")
client = OpenAI(api_key=api_key)

@app.route("/generate", methods=["POST"])
def generate():
    try:
        data = request.get_json()
        chunks = data.get("chunks", [])
        prompt_text = "\n\n".join(chunks)

        full_prompt = f"""
–¢—ã ‚Äî –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–π –∫–æ–ø–∏—Ä–∞–π—Ç–µ—Ä. –ù–∞ –æ—Å–Ω–æ–≤–µ —Å–ª–µ–¥—É—é—â–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∂–∏–ª–æ–º –∫–æ–º–ø–ª–µ–∫—Å–µ —Å–æ–∑–¥–∞–π:

1. üè° *–ü–æ–ª–Ω–æ—Ü–µ–Ω–Ω—É—é —Å—Ç–∞—Ç—å—é* –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –Ω–∞ —Å–∞–π—Ç–µ. –ò—Å–ø–æ–ª—å–∑—É–π –∂–∏–≤–æ–π, –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Å—Ç–∏–ª—å. –î–æ–±–∞–≤—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –æ–± –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–µ, —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–µ, –æ—á–µ—Ä–µ–¥—è—Ö, –≤–∞—Ä–∏–∞–Ω—Ç–∞—Ö –æ—Ç–¥–µ–ª–∫–∏, —Å–ø–æ—Å–æ–±–∞—Ö –ø–æ–∫—É–ø–∫–∏, –≤—ã–≥–æ–¥–∞—Ö –¥–ª—è –ø–æ–∫—É–ø–∞—Ç–µ–ª—è. –¢–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–º, –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∏–º –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º. –í –∫–æ–Ω—Ü–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤—Å—Ç–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ –ñ–ö, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å –≤ —Ç–µ–∫—Å—Ç–µ.

2. ‚úèÔ∏è *–ó–∞–≥–æ–ª–æ–≤–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–∞* ‚Äî –Ω–µ –±–æ–ª–µ–µ 100 —Å–∏–º–≤–æ–ª–æ–≤, —Ü–µ–ø–ª—è—é—â–∏–π.

3. üìà *META TITLE* ‚Äî –¥–æ 60 —Å–∏–º–≤–æ–ª–æ–≤.

4. üîë *META KEYWORDS* ‚Äî 5‚Äì10 –∫–ª—é—á–µ–≤—ã—Ö —Ñ—Ä–∞–∑, —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é.

–ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:
{prompt_text}

–û—Ç–≤–µ—Ç –≤–µ—Ä–Ω–∏ —Å—Ç—Ä–æ–≥–æ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ (–Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ):

===ELEMENT_NAME===
{{–∑–∞–≥–æ–ª–æ–≤–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–∞}}

===META_TITLE===
{{–º–µ—Ç–∞ —Ç–∞–π—Ç–ª}}

===META_KEYWORDS===
{{–∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞}}

===ARTICLE===
{{–ø–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç—å–∏}}
"""

        response = client.chat.completions.create(
            model="gpt-4o",
            messages=[{"role": "user", "content": full_prompt}],
            temperature=0.8
        )

        content = response.choices[0].message.content.strip()

        def extract_block(tag):
            match = re.search(rf"==={tag}===\s*(.+?)(?=(?:===|$))", content, re.DOTALL)
            return match.group(1).strip() if match else ""

        result = {
            "element_name": extract_block("ELEMENT_NAME"),
            "meta_title": extract_block("META_TITLE"),
            "meta_keywords": extract_block("META_KEYWORDS"),
            "article": extract_block("ARTICLE")
        }

        return jsonify(result)

    except Exception as e:
        return jsonify({"error": str(e)}), 500

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=10000)
